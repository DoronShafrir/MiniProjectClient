//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiniProject.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="StudentList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Student")]
    [System.SerializableAttribute()]
    public class StudentList : System.Collections.Generic.List<MiniProject.ServiceReference2.Student> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Student : MiniProject.ServiceReference2.People {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MiniProject.ServiceReference2.LessonList lessonListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MiniProject.ServiceReference2.LessonList lessonList {
            get {
                return this.lessonListField;
            }
            set {
                if ((object.ReferenceEquals(this.lessonListField, value) != true)) {
                    this.lessonListField = value;
                    this.RaisePropertyChanged("lessonList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MiniProject.ServiceReference2.City))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MiniProject.ServiceReference2.Lesson))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MiniProject.ServiceReference2.People))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MiniProject.ServiceReference2.Lecturer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MiniProject.ServiceReference2.Student))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int id1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="id")]
        public int id1 {
            get {
                return this.id1Field;
            }
            set {
                if ((this.id1Field.Equals(value) != true)) {
                    this.id1Field = value;
                    this.RaisePropertyChanged("id1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class City : MiniProject.ServiceReference2.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lesson", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Lesson : MiniProject.ServiceReference2.BaseEntity {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="People", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MiniProject.ServiceReference2.Lecturer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MiniProject.ServiceReference2.Student))]
    public partial class People : MiniProject.ServiceReference2.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MiniProject.ServiceReference2.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MiniProject.ServiceReference2.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fname {
            get {
                return this.FnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FnameField, value) != true)) {
                    this.FnameField = value;
                    this.RaisePropertyChanged("Fname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lname {
            get {
                return this.LnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LnameField, value) != true)) {
                    this.LnameField = value;
                    this.RaisePropertyChanged("Lname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((this.PhoneField.Equals(value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lecturer", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Lecturer : MiniProject.ServiceReference2.People {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MiniProject.ServiceReference2.LessonList lessonListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MiniProject.ServiceReference2.LessonList lessonList {
            get {
                return this.lessonListField;
            }
            set {
                if ((object.ReferenceEquals(this.lessonListField, value) != true)) {
                    this.lessonListField = value;
                    this.RaisePropertyChanged("lessonList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LessonList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Lesson")]
    [System.SerializableAttribute()]
    public class LessonList : System.Collections.Generic.List<MiniProject.ServiceReference2.Lesson> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LecturerList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Lecturer")]
    [System.SerializableAttribute()]
    public class LecturerList : System.Collections.Generic.List<MiniProject.ServiceReference2.Lecturer> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CityList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="City")]
    [System.SerializableAttribute()]
    public class CityList : System.Collections.Generic.List<MiniProject.ServiceReference2.City> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary10")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sum", ReplyAction="http://tempuri.org/IService1/SumResponse")]
        decimal Sum(int n1, int n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sum", ReplyAction="http://tempuri.org/IService1/SumResponse")]
        System.Threading.Tasks.Task<decimal> SumAsync(int n1, int n2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudentList", ReplyAction="http://tempuri.org/IService1/GetStudentListResponse")]
        MiniProject.ServiceReference2.StudentList GetStudentList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudentList", ReplyAction="http://tempuri.org/IService1/GetStudentListResponse")]
        System.Threading.Tasks.Task<MiniProject.ServiceReference2.StudentList> GetStudentListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudentListById", ReplyAction="http://tempuri.org/IService1/GetStudentListByIdResponse")]
        MiniProject.ServiceReference2.StudentList GetStudentListById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudentListById", ReplyAction="http://tempuri.org/IService1/GetStudentListByIdResponse")]
        System.Threading.Tasks.Task<MiniProject.ServiceReference2.StudentList> GetStudentListByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudentListByName", ReplyAction="http://tempuri.org/IService1/GetStudentListByNameResponse")]
        MiniProject.ServiceReference2.StudentList GetStudentListByName(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudentListByName", ReplyAction="http://tempuri.org/IService1/GetStudentListByNameResponse")]
        System.Threading.Tasks.Task<MiniProject.ServiceReference2.StudentList> GetStudentListByNameAsync(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDeleteStudent", ReplyAction="http://tempuri.org/IService1/GetDeleteStudentResponse")]
        int GetDeleteStudent(MiniProject.ServiceReference2.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDeleteStudent", ReplyAction="http://tempuri.org/IService1/GetDeleteStudentResponse")]
        System.Threading.Tasks.Task<int> GetDeleteStudentAsync(MiniProject.ServiceReference2.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInsertStudent", ReplyAction="http://tempuri.org/IService1/GetInsertStudentResponse")]
        int GetInsertStudent(MiniProject.ServiceReference2.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInsertStudent", ReplyAction="http://tempuri.org/IService1/GetInsertStudentResponse")]
        System.Threading.Tasks.Task<int> GetInsertStudentAsync(MiniProject.ServiceReference2.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInsertLecturer", ReplyAction="http://tempuri.org/IService1/GetInsertLecturerResponse")]
        int GetInsertLecturer(MiniProject.ServiceReference2.Lecturer lecturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInsertLecturer", ReplyAction="http://tempuri.org/IService1/GetInsertLecturerResponse")]
        System.Threading.Tasks.Task<int> GetInsertLecturerAsync(MiniProject.ServiceReference2.Lecturer lecturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLecturertList", ReplyAction="http://tempuri.org/IService1/GetLecturertListResponse")]
        MiniProject.ServiceReference2.LecturerList GetLecturertList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLecturertList", ReplyAction="http://tempuri.org/IService1/GetLecturertListResponse")]
        System.Threading.Tasks.Task<MiniProject.ServiceReference2.LecturerList> GetLecturertListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLecturertListById", ReplyAction="http://tempuri.org/IService1/GetLecturertListByIdResponse")]
        MiniProject.ServiceReference2.LecturerList GetLecturertListById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLecturertListById", ReplyAction="http://tempuri.org/IService1/GetLecturertListByIdResponse")]
        System.Threading.Tasks.Task<MiniProject.ServiceReference2.LecturerList> GetLecturertListByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLecturertListByName", ReplyAction="http://tempuri.org/IService1/GetLecturertListByNameResponse")]
        MiniProject.ServiceReference2.LecturerList GetLecturertListByName(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLecturertListByName", ReplyAction="http://tempuri.org/IService1/GetLecturertListByNameResponse")]
        System.Threading.Tasks.Task<MiniProject.ServiceReference2.LecturerList> GetLecturertListByNameAsync(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDeleteLecturer", ReplyAction="http://tempuri.org/IService1/GetDeleteLecturerResponse")]
        int GetDeleteLecturer(MiniProject.ServiceReference2.Lecturer lecturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDeleteLecturer", ReplyAction="http://tempuri.org/IService1/GetDeleteLecturerResponse")]
        System.Threading.Tasks.Task<int> GetDeleteLecturerAsync(MiniProject.ServiceReference2.Lecturer lecturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCityList", ReplyAction="http://tempuri.org/IService1/GetCityListResponse")]
        MiniProject.ServiceReference2.CityList GetCityList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCityList", ReplyAction="http://tempuri.org/IService1/GetCityListResponse")]
        System.Threading.Tasks.Task<MiniProject.ServiceReference2.CityList> GetCityListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUpdateStudent", ReplyAction="http://tempuri.org/IService1/GetUpdateStudentResponse")]
        int GetUpdateStudent(MiniProject.ServiceReference2.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUpdateStudent", ReplyAction="http://tempuri.org/IService1/GetUpdateStudentResponse")]
        System.Threading.Tasks.Task<int> GetUpdateStudentAsync(MiniProject.ServiceReference2.Student student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUpdateLecturer", ReplyAction="http://tempuri.org/IService1/GetUpdateLecturerResponse")]
        int GetUpdateLecturer(MiniProject.ServiceReference2.Lecturer lecturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUpdateLecturer", ReplyAction="http://tempuri.org/IService1/GetUpdateLecturerResponse")]
        System.Threading.Tasks.Task<int> GetUpdateLecturerAsync(MiniProject.ServiceReference2.Lecturer lecturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        MiniProject.ServiceReference2.CompositeType GetDataUsingDataContract(MiniProject.ServiceReference2.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<MiniProject.ServiceReference2.CompositeType> GetDataUsingDataContractAsync(MiniProject.ServiceReference2.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MiniProject.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MiniProject.ServiceReference2.IService1>, MiniProject.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public decimal Sum(int n1, int n2) {
            return base.Channel.Sum(n1, n2);
        }
        
        public System.Threading.Tasks.Task<decimal> SumAsync(int n1, int n2) {
            return base.Channel.SumAsync(n1, n2);
        }
        
        public MiniProject.ServiceReference2.StudentList GetStudentList() {
            return base.Channel.GetStudentList();
        }
        
        public System.Threading.Tasks.Task<MiniProject.ServiceReference2.StudentList> GetStudentListAsync() {
            return base.Channel.GetStudentListAsync();
        }
        
        public MiniProject.ServiceReference2.StudentList GetStudentListById(int id) {
            return base.Channel.GetStudentListById(id);
        }
        
        public System.Threading.Tasks.Task<MiniProject.ServiceReference2.StudentList> GetStudentListByIdAsync(int id) {
            return base.Channel.GetStudentListByIdAsync(id);
        }
        
        public MiniProject.ServiceReference2.StudentList GetStudentListByName(string firstName, string lastName) {
            return base.Channel.GetStudentListByName(firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<MiniProject.ServiceReference2.StudentList> GetStudentListByNameAsync(string firstName, string lastName) {
            return base.Channel.GetStudentListByNameAsync(firstName, lastName);
        }
        
        public int GetDeleteStudent(MiniProject.ServiceReference2.Student student) {
            return base.Channel.GetDeleteStudent(student);
        }
        
        public System.Threading.Tasks.Task<int> GetDeleteStudentAsync(MiniProject.ServiceReference2.Student student) {
            return base.Channel.GetDeleteStudentAsync(student);
        }
        
        public int GetInsertStudent(MiniProject.ServiceReference2.Student student) {
            return base.Channel.GetInsertStudent(student);
        }
        
        public System.Threading.Tasks.Task<int> GetInsertStudentAsync(MiniProject.ServiceReference2.Student student) {
            return base.Channel.GetInsertStudentAsync(student);
        }
        
        public int GetInsertLecturer(MiniProject.ServiceReference2.Lecturer lecturer) {
            return base.Channel.GetInsertLecturer(lecturer);
        }
        
        public System.Threading.Tasks.Task<int> GetInsertLecturerAsync(MiniProject.ServiceReference2.Lecturer lecturer) {
            return base.Channel.GetInsertLecturerAsync(lecturer);
        }
        
        public MiniProject.ServiceReference2.LecturerList GetLecturertList() {
            return base.Channel.GetLecturertList();
        }
        
        public System.Threading.Tasks.Task<MiniProject.ServiceReference2.LecturerList> GetLecturertListAsync() {
            return base.Channel.GetLecturertListAsync();
        }
        
        public MiniProject.ServiceReference2.LecturerList GetLecturertListById(int id) {
            return base.Channel.GetLecturertListById(id);
        }
        
        public System.Threading.Tasks.Task<MiniProject.ServiceReference2.LecturerList> GetLecturertListByIdAsync(int id) {
            return base.Channel.GetLecturertListByIdAsync(id);
        }
        
        public MiniProject.ServiceReference2.LecturerList GetLecturertListByName(string firstName, string lastName) {
            return base.Channel.GetLecturertListByName(firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<MiniProject.ServiceReference2.LecturerList> GetLecturertListByNameAsync(string firstName, string lastName) {
            return base.Channel.GetLecturertListByNameAsync(firstName, lastName);
        }
        
        public int GetDeleteLecturer(MiniProject.ServiceReference2.Lecturer lecturer) {
            return base.Channel.GetDeleteLecturer(lecturer);
        }
        
        public System.Threading.Tasks.Task<int> GetDeleteLecturerAsync(MiniProject.ServiceReference2.Lecturer lecturer) {
            return base.Channel.GetDeleteLecturerAsync(lecturer);
        }
        
        public MiniProject.ServiceReference2.CityList GetCityList() {
            return base.Channel.GetCityList();
        }
        
        public System.Threading.Tasks.Task<MiniProject.ServiceReference2.CityList> GetCityListAsync() {
            return base.Channel.GetCityListAsync();
        }
        
        public int GetUpdateStudent(MiniProject.ServiceReference2.Student student) {
            return base.Channel.GetUpdateStudent(student);
        }
        
        public System.Threading.Tasks.Task<int> GetUpdateStudentAsync(MiniProject.ServiceReference2.Student student) {
            return base.Channel.GetUpdateStudentAsync(student);
        }
        
        public int GetUpdateLecturer(MiniProject.ServiceReference2.Lecturer lecturer) {
            return base.Channel.GetUpdateLecturer(lecturer);
        }
        
        public System.Threading.Tasks.Task<int> GetUpdateLecturerAsync(MiniProject.ServiceReference2.Lecturer lecturer) {
            return base.Channel.GetUpdateLecturerAsync(lecturer);
        }
        
        public MiniProject.ServiceReference2.CompositeType GetDataUsingDataContract(MiniProject.ServiceReference2.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<MiniProject.ServiceReference2.CompositeType> GetDataUsingDataContractAsync(MiniProject.ServiceReference2.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
